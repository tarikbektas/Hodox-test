/*!
* tree-helper v1.4.14
* (c) phphe <phphe@outlook.com> (https://github.com/phphe)
* Released under the MIT License.
*/
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("helper-js")):"function"==typeof define&&define.amd?define(["exports","helper-js"],n):n((e=e||self).treeHelper={},e.hp)}(this,(function(e,n){"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function t(e){return function(e){if(Array.isArray(e)){for(var n=0,r=new Array(e.length);n<e.length;n++)r[n]=e[n];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function i(e,r){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"children",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"parent";e[i]&&n.arrayRemove(e[i][t],e),e[i]=r}e.appendTo=function(e,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"children";if(e===n)throw"can't append to self";var t=n[r];t[t.length-1]!==e&&(i(e,n),t.push(e))},e.breadthFirstSearch=function(e,i){var o=arguments.length>3?arguments[3]:void 0,f=(n.isArray(e)?e:[e]).map((function(e,n){return{item:e,index:n}}));o&&f.reverse();for(var c=function(){var e=f.shift(),n=e.item,r=e.index,c=e.parent,l=i(n,r,c);if(!1===l)return{v:void 0};if("skip children"===l)return"continue";if("skip siblings"===l&&(f=f.filter((function(e){return e.parent!==c}))),n.children){var a,u=n.children;o&&(u=u.slice()).reverse();var d=u.map((function(e,r){return{item:e,index:r,parent:n}}));(a=f).push.apply(a,t(d))}};f.length;){var l=c();switch(l){case"continue":continue;default:if("object"===r(l))return l.v}}},e.clone=function e(r){var t,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"children";return n.isArray(r)?t=r.map((function(n){return e(n)})):(t=Object.assign({},r))[i]&&(t[i]=e(t[i])),t},e.depthFirstSearch=function(e,r){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"children",i=arguments.length>3?arguments[3]:void 0,o=n.isArray(e)?e:[e],f=function(){};try{!function e(n,o){i&&(n=n.slice()).reverse();for(var c=n.length,l=0;l<c;l++){var a=n[l],u=r(a,l,o);if(!1===u)throw new f;if("skip children"!==u){if("skip siblings"===u)break;null!=a[t]&&e(a[t],a)}}}(o)}catch(e){if(!(e instanceof f))throw e}},e.forIn=function(e,r){var t,i,o,f=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"children";return n.isArray(e)?(t=e,i=null):(t=[e],i=null),t&&(o=function(e,n){for(var t in e){var i=e[t];if(!1===r(i,t,n))return!1;if(null!=i[f]&&!1===o(i[f],i))return!1}return!0})(t,i),e},e.getTreeDataFromFlat=function(e,n,r){return e.forEach((function(t){return t.children=e.filter((function(e){return e[r]===t[n]}))})),e.filter((function(e){return null==e[r]}))},e.insertAfter=function(e,r){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"children",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"parent";if(e!==r){var f=r[o][t],c=f.indexOf(r);f[c+1]!==e&&(e[o]===r[o]?(n.arrayRemove(f,e),c=f.indexOf(r)):i(e,r[o]),f.splice(c+1,0,e))}},e.insertBefore=function(e,r){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"children",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"parent";if(e!==r){var f=r[o][t],c=f.indexOf(r);f[c-1]!==e&&(e[o]===r[o]?(n.arrayRemove(f,e),c=f.indexOf(r)):i(e,r[o]),f.splice(c,0,e))}},e.prependTo=function(e,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"children";if(e===n)throw"can't prepend to self";var t=n[r];t[0]!==e&&(i(e,n),t.splice(0,0,e))},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=tree-helper.min.js.map
